#!/usr/bin/python3
# -*- coding: utf-8 -*-
import sys
import re
import xsanscript

for fname in sys.argv[1:]:
    # for out_script in ['tamil', 'telugu', 'grantha', 'kannada', 'malayalam', 'iast', 'hindi', 'tamilgrantha']:
    for out_script in ['tamil', 'telugu', 'grantha', 'kannada', 'malayalam', 'hindi', 'tamilgrantha', 'bengali', 'oriya', 'sharada', 'gujarati']:
        print('Converting %s to %s script...' % (fname, out_script), end='')
        with open('%s' % (fname.replace('devanagari', out_script)), 'w') as outfile:
            with open('%s' % (fname), 'r', errors='replace') as f:
                for line in f.readlines():
                    if out_script == 'hindi':
                        z = line[:-1]
                    else:
                        z = xsanscript.transliterate(line[:-1], 'devanagari', out_script)
                    z = z.replace('\\dng', '\\%s' % out_script)
                    z = z.replace('-devanagari.tex', '-%s.tex' % out_script)
                    z = z.replace('-devanagari.pdf', '-%s.pdf' % out_script)
                    z = z.replace('[dng]', '[%s]' % out_script)
                    z = z.replace('setbool{dng}', 'setbool{%s}' % out_script)
                    z = z.replace('', ':').replace('', ':').replace("ʼ", "'")
                    specials = ['', '', '', '', 'ꣳ', '']
                    if out_script == 'telugu':
                        specials.extend(['', ''])
                    for s in specials:
                        z = z.replace(s, '\\dng{%s}' % s)
                    if out_script == 'tamil':
                        maatraas = ["ா", "ி", "ீ", "ு", "ூ", "்ரு'", "்ரூ'", "்லு'", "்லூ'", "ெ", "ே", "ை", "ொ", "ோ", "ௌ", "்"]
                        swaraas = ["॒", "॑", "", ""]
                        z = z.replace('(அ)(அ)', '(ஆ)')
                        for s in swaraas:
                            z = z.replace(s, '')
                        for m in maatraas:
                            for sup in [2, 3, 4]:
                                src = '\\textsuperscript{%d}%s' % (sup, m)
                                dest = '%s\\textsuperscript{%d}' % (m, sup)
                                z = z.replace(src, dest)
                    if out_script == 'telugu':
                        # z = z.replace('᳚', '\\dng{%s}' % ('᳚'))
                        z = z.replace('ओ', 'ఓ')

                    # PROCESS ANUSWARAS
                    # if out_script in ['kannada', 'telugu', 'hindi', 'malayalam']:
                    if out_script in ['kannada', 'telugu', 'hindi']:
                        if out_script == 'kannada':
                            anusvara = "ಂ"
                            virama = "್"
                            vargas = ["ಕಖಗಘಙ", "ಚಛಜಝಞ", "ಟಠಡಢಣ", "ತಥದಧನ", "ಪಫಬಭಮ"]
                        elif out_script == 'telugu':
                            anusvara = "ం"
                            virama = "్"
                            vargas = ["కఖగఘఙ", "చఛజఝఞ", "టఠడఢణ", "తథదధన", "పఫబభమ"]
                        elif out_script == 'hindi':
                            anusvara = "ं"
                            virama = "्"
                            vargas = ["कखगघङ", "चछजझञ", "टठडढण", "तथदधन", "पफबभम"]
                        # elif out_script == 'malayalam':
                        #     anusvara = "ം"
                        #     virama = "്"
                        #     vargas = ["കഖഗഘങ", "ചഛജഝഞ", "ടഠഡഢണ", "തഥദധന", "പഫബഭമ"]

                        forwardVargaREs = [re.compile("{}{}([{}])".format(varga[-1], virama, varga[:-1])) for varga in vargas]

                        for vargaRE in forwardVargaREs:
                            z = vargaRE.sub(lambda m: anusvara + m.group(1), z)

                    if out_script == 'malayalam':
                        z = z.replace('മ്', 'ം')
                        z = z.replace('ര്', 'ര്‍')

                    if line.startswith('% NOTE: '):
                        z = '% WARNING: DO NOT EDIT THIS FILE. It is auto-generated from the devanagari file!'

                    print(z, file=outfile)
        print('done.')
